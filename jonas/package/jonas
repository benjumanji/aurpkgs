#! /bin/bash

. /etc/profile.d/jonas

if [ -z "$JONAS_ROOT" ]; then
	echo "Please set the JONAS_ROOT variable."
	exit
fi

# 'setenv' script --BEGIN
if [ -z "$JONAS_BASE" ]
then
	export JONAS_BASE=$JONAS_ROOT
fi

JONAS_CLASSPATH=/usr/share/java/jonas/lib:/usr/share/java/jonas/repositories

if [ "$JONAS_CLASSPATH" = "" ]; then
	export JONAS_CLASSPATH=$JONAS_BASE/conf
else
	export JONAS_CLASSPATH=$JONAS_BASE/conf:$JONAS_CLASSPATH
fi
# 'setenv' script --END

# Display banner (if any)
if [ -f $JONAS_BASE/conf/banner.txt ]; then
	cat $JONAS_BASE/conf/banner.txt
fi

# Set path for JOnAS bootstrap libraries
LIB_BOOTSTRAP_PATH=/usr/share/java/jonas/lib/bootstrap

# Update JONAS_CLASSPATH
JONAS_CLASSPATH=$JONAS_CLASSPATH:$LIB_BOOTSTRAP_PATH/felix-launcher.jar
JONAS_CLASSPATH=$JONAS_CLASSPATH:$LIB_BOOTSTRAP_PATH/jonas-commands.jar
JONAS_CLASSPATH=$JONAS_CLASSPATH:$LIB_BOOTSTRAP_PATH/jonas-version.jar

JONAS_OPTS="\
 -Djonas.root=$JONAS_ROOT \
 -Djonas.base=$JONAS_BASE \
 -Dipojo.log.level=ERROR \
 -Djava.security.policy=$JONAS_BASE/conf/java.policy \
 -Djava.security.auth.login.config=$JONAS_BASE/conf/jaas.config \
 -Djava.endorsed.dirs=/usr/share/java/jonas/lib/endorsed \
 -Dorg.omg.CORBA.ORBClass=org.jacorb.orb.ORB \
 -Dorg.omg.CORBA.ORBSingletonClass=org.jacorb.orb.ORBSingleton \
 -Dorg.omg.PortableInterceptor.ORBInitializerClass.standard_init=org.jacorb.orb.standardInterceptors.IORInterceptorInitializer \
 -Dcom.sun.CORBA.ORBDynamicStubFactoryFactoryClass=com.sun.corba.se.impl.presentation.rmi.StubFactoryFactoryStaticImpl \
 -Djavax.xml.soap.SOAPConnectionFactory=com.sun.xml.messaging.saaj.client.p2p.HttpSOAPConnectionFactory \
 -Djavax.xml.soap.SOAPFactory=com.sun.xml.messaging.saaj.soap.ver1_1.SOAPFactory1_1Impl \
 -Djavax.xml.soap.MetaFactory=com.sun.xml.messaging.saaj.soap.SAAJMetaFactoryImpl \
 -Djavax.xml.soap.MessageFactory=com.sun.xml.messaging.saaj.soap.ver1_1.SOAPMessageFactory1_1Impl \
"

# ---------------------------------------------
# Get arguments
# ---------------------------------------------
while [ "$#" -gt 0 ]
  do case "$1" in
    start)
      MODE=start
      ;;
    stop)
      MODE=stop
      FORCE_FOREGROUND=true
      ;;
    halt)
      MODE=stop
      FORCE_FOREGROUND=true
      echo "[DEPRECATED] Please use stop argument instead of halt"
      ;;
    admin)
      MODE=admin
      FORCE_FOREGROUND=true
      ;;
    version)
      MODE=version
      FORCE_FOREGROUND=true
      ;;
    check)
      MODE=check
      FORCE_FOREGROUND=true
      ;;
    -standby)
      ARGS="$ARGS -standby"
      if [ "$MODE" = "stop" ]; then
        FORCE_FOREGROUND=false
      fi
      ;;
    -running)
     # Implicit argument for the 'start' argument
      ;;
    -halt)
     # Implicit argument for the 'stop' argument
      ;;
    -cp)
      PARAMS="$PARAMS $1"
      shift
      JONAS_CLASSPATH=$JONAS_CLASSPATH:$1
      ;;
    -debug)
      PARAMS="$PARAMS $1"
      shift
      # $1=-p
      if [ "$1" != "-p" ]; then
        echo "-debug mode need a following \"-p \""
        exit 1
      fi
      shift
      JONAS_DEBUG_PORT=$1
      JONAS_DEBUG_SUSPEND=n
      if [ "$2" = "-s" ]; then
        shift
        shift
        JONAS_DEBUG_SUSPEND=$1
      fi
      echo "JOnAS Debug Info :"
      echo " listening on port : $JONAS_DEBUG_PORT"
      echo " suspend mode : $JONAS_DEBUG_SUSPEND"
      JONAS_DEBUG_OPTS=" -Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,address=$JONAS_DEBUG_PORT,suspend=$JONAS_DEBUG_SUSPEND"
      ;;
    -fg)
      WHERE=foreground
      ;;
    -gui)
      echo "Start Felix GUI with JOnAS."
      START_OPTS="$START_OPTS -Djonas.felix.gui.enabled=true"
      HEADLESS=""
      ;;
    -tui)
      echo "Start Felix TUI with JOnAS."
      START_OPTS="$START_OPTS -Djonas.felix.tui.enabled=true"
      FORCE_FOREGROUND=true
      ;;
    -win)
      WHERE=window
      ;;
    -nojit)
      JONAS_OPTS="$JONAS_OPTS -Djava.compiler=NONE"
      START_OPTS="$START_OPTS -Djava.compiler=NONE"
      ;;
    -dev)
      START_OPTS="$START_OPTS -Djonas.developer=true"
      ;;
    -clean)
      echo "Clean Felix cache before starting JOnAS."
      START_OPTS="$START_OPTS -Djonas.cache.clean=true"
      ;;
    -n)
      PARAMS="$PARAMS $1"
      shift
      JONAS_NAME=$1
      ;;
    -timeout)
      PARAMS="$PARAMS $1"
      shift
      PINGTIMEOUT=$1
      ;;
    -D*)
      JONAS_OPTS="$JONAS_OPTS $1"
      START_OPTS="$START_OPTS $1"
      ;;
    -target)
      if [ "$MODE" = "start" ]; then
        ARGS="$ARGS -start"
      fi
      if [ "$MODE" = "stop" ]; then
        ARGS="$ARGS -stop"
      fi
      MODE=admin
      ARGS="$ARGS -target"
      ;;
    -username)
      PARAMS="$PARAMS $1"
      shift
      USERNAME="-username $1"
      ;;
    -password)
      PARAMS="$PARAMS $1"
      shift
      PASSWORD="-password $1"
      ;;
    *)
      # All other args are passed "as is" to the java program
      ARGS="$ARGS $1"
      ;;
  esac
  if [ "$1" != "-win" ]; then
    PARAMS="$PARAMS $1"
  fi
  shift
done

# ---------------------------------------------
# Check args
# ---------------------------------------------
case "$MODE" in
  start)
    CLASS_TO_RUN="$ADMIN_CLASS -start"
    ;;
  stop)
    CLASS_TO_RUN="$ADMIN_CLASS -stop"
    ;;
  admin)
    CLASS_TO_RUN=$ADMIN_CLASS
    ;;
  version)
    CLASS_TO_RUN=org.ow2.jonas.Version
    ;;
  check)
    CLASS_TO_RUN=org.ow2.jonas.commands.check.CheckEnv
    ;;
  *)
    # Usage
    # Will be displayed if the user type an unrecognized command
    echo "Unrecognized command : '$*'"
    echo "Usage: $0 start | stop | admin | version | check"
    echo "Options:"
    echo "  for 'start': [-fg] [-bg] [-win] [-n] [-standby] [-debug] [-gui] [-tui] [-dev] [-clean] [-nojit]"
    echo "  -fg                         Launch JOnAS in foreground (Only applicable for 'start')."
    echo "  -bg                         Launch JOnAS in background (Only applicable for 'start')."
    echo "  -win                        Launch JOnAS in a separate window (Only applicable for 'start')."
    echo "  -n <jonas-name>             Specify the JOnAS instance name."
    echo "  -standby                    Allow to reach the STANDBY state (Only applicable for 'start' and 'stop')."
    echo "  -debug -p <port> [-s <y/n>] Debug the JOnAS instance."
    echo "  -gui                        Launch JOnAS with the Apache Felix GUI (Only applicable for 'start')."
    echo "  -tui                        Launch JOnAS with the Apache Felix Shell"
    echo "                              (allow to perform OSGi operations on the framework)."
    echo "                              (Only applicable for 'start')"
    echo "  -dev                        Use M2 registry for bundles (for JOnAS developers)."
    echo "  -clean                      Clean Felix cache before starting JOnAS."
    echo "  -nojit                      Disable JIT."
    echo " for '*': [-cp] [-n] [-timeout] [-target] [-D*]"
    echo "  -cp <classpath>             Additional CLASSPATH entries (to be used with care)."
    echo "  -timeout <timeout>          Specify a new connection timeout."
    echo "  -target [options]           Perform remote administration tasks."
    echo "  -Dname=value                Add JVM properties."
    exit 1
    ;;
esac

# ---------------------------------------------
# Print out JONAS_BASE
# ---------------------------------------------
case "$MODE" in
 start|check)
 echo "JONAS_BASE is set to" $JONAS_BASE
 ;;
esac

# ---------------------------------------------
# Add RMI Annotation
# ---------------------------------------------
#if [ -z "$ANNOTATE" ]; then
#  JONAS_OPTS="$JONAS_OPTS \
#              -Djava.rmi.server.RMIClassLoaderSpi=org.ow2.jonas.lib.bootstrap.RemoteClassLoaderSpi"
#fi

# ---------------------------------------------
# Set jonas server name
# ---------------------------------------------
if [ ! -z "$JONAS_NAME" ]; then
  JONAS_OPTS="$JONAS_OPTS -Djonas.name=$JONAS_NAME "
  START_OPTS="$START_OPTS -Djonas.name=$JONAS_NAME "
fi

# ---------------------------------------------
# Set jonas timeout for ping
# ---------------------------------------------
if [ ! -z "$PINGTIMEOUT" ]; then
  PINGTIMEOUT_OPT="-timeout $PINGTIMEOUT"
fi

# Add Headless if needed
START_OPTS="$START_OPTS $HEADLESS"

# Force foreground mode
if [ "$FORCE_FOREGROUND" = true ]; then
 WHERE=foreground
fi

# ---------------------------------------------
# Run java command
# ---------------------------------------------
if [ "$WHERE" = "window" ]; then
  xterm -title $HOSTNAME:$JONAS_NAME -geometry 110x16 -sb -e $0 $PARAMS -fg &
else
 case "$WHERE" in
 foreground)
   java $JAVA_OPTS $START_OPTS $JONAS_OPTS -cp $JONAS_CLASSPATH $JONAS_DEBUG_OPTS $CLASS_TO_RUN $ARGS $USERNAME $PASSWORD
   ;;
 background)
   java $JAVA_OPTS $START_OPTS $JONAS_OPTS -cp $JONAS_CLASSPATH $JONAS_DEBUG_OPTS $CLASS_TO_RUN $ARGS $USERNAME $PASSWORD &
   java            $START_OPTS $JONAS_OPTS -cp $JONAS_CLASSPATH $ADMIN_CLASS -ping $PINGTIMEOUT_OPT $ARGS $USERNAME $PASSWORD
   ;;
 esac
fi
