# Maintainer: Guillaume ALAUX <guillaume at alaux dot net>
# Contributor: James Bulmer <nekinie@gmail.com>
# TODO extract zookeeper dependency?

pkgname=kafka
pkgver=0.8.1.1
# You can change this for one of the Scala version upstream has already built against
# as explained on https://kafka.apache.org/downloads.html
_scalaver=2.10
pkgrel=2
pkgdesc='A high-throughput distributed messaging system'
arch=('any')
url='http://kafka.apache.org/'
license=('Apache')
depends=('java-runtime')
backup=(etc/kafka/consumer.properties
        etc/kafka/log4j.properties
        etc/kafka/producer.properties
        etc/kafka/server.properties
        etc/kafka/test-log4j.properties
        etc/kafka/tools-log4j.properties
        etc/kafka/zookeeper.properties)

source=(https://dist.apache.org/repos/dist/release/${pkgname}/${pkgver}/${pkgname}_${_scalaver}-${pkgver}.tgz
        systemd_kafka.service
        systemd_kafka-zookeeper.service)

sha256sums=('2532af3dbd71d2f2f95f71abff5b7505690bd1f15c7063f8cbaa603b45ee4e86'
            'f59cd34aba9427eccd2af1a6b070d7b19efacd1b2c6ec5817fb44ca7eb33f6b0'
            '5452529704524c41399008f22e85f0fd6edc0826e57ebdfa179076cd542f9ed9')

package() {
  cd "${srcdir}/${pkgname}_${_scalaver}-${pkgver}"

  _app_home=/usr/share/${pkgname}

  mkdir -p ${pkgdir}{${_app_home}/bin,/etc,/usr/bin,/usr/share/java/${pkgname},/var/log/${pkgname}}

  cp -r config ${pkgdir}/etc/${pkgname}/
  ln -s /etc/${pkgname} ${pkgdir}${_app_home}/config

  cp -r bin/*  ${pkgdir}${_app_home}/bin/
  rm -rf ${pkgdir}${_app_home}/bin/windows
  sed -i "s|\$(dirname \$0)|${_app_home}/bin|" ${pkgdir}${_app_home}/bin/*
  for b in ${pkgdir}${_app_home}/bin/*; do
    bname=$(basename $b)
    ln -s ${_app_home}/bin/${bname} ${pkgdir}/usr/bin/${bname}
  done

  cp -r libs/* ${pkgdir}/usr/share/java/${pkgname}
  ln -s ../java/${pkgname} ${pkgdir}${_app_home}/libs

  ln -s /var/log/${pkgname} ${pkgdir}${_app_home}/logs

  for s in kafka-zookeeper kafka; do
    install -D -m 644 "${srcdir}/systemd_${s}.service" \
      "${pkgdir}/usr/lib/systemd/system/${s}.service"
  done
}
